@page "/"
@namespace Backrooms.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_Layout";
}

<component type="typeof(App)" render-mode="Server" />
<script>
    var GLOBAL = {};
    GLOBAL.DotNetReference = null;
    GLOBAL.SetDotnetReference = function (pDotNetReference) {
        GLOBAL.DotNetReference = pDotNetReference;
    };
    window.methods = {
        CreateCookie: function (name, value, hours) {
            var expires;
            if (hours) {
                var date = new Date();
                date.setTime(date.getTime() + (hours * 60 * 60 * 1000));
                expires = "; expires=" + date.toGMTString();
            }
            else {
                expires = "";
            }
            document.cookie = name + "=" + value + expires + "; path=/";
        },
        GetCookie: function (name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        },
        RemoveCookie: function (name) {
            this.CreateCookie(name, "", -1);
        },
        GetWindowWidth: function () {
            return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        },
        GetIpAddress: async function () {
            let res = await fetch('https://eromanowski.pl/ip.php')
                .then((response) => response.json())
                .then((data) => {
                    return data
                })
            let r = "";    
            for (let i = 0; i < res.length; i++) {
                r += res[i].replaceAll("x", "");
                if (i != res.length - 1) {
                    r += ".";
                }
            }
            return r;
        },
        registerResizeCallback: function () {
            window.addEventListener("resize",  () => {
                GLOBAL.DotNetReference.invokeMethodAsync('BrowserHasResized');
            });
        },
    }
</script>